<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>myequivalents</artifactId>
    <groupId>uk.ac.ebi.fg</groupId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  <artifactId>myequivalents-web</artifactId>
  <packaging>war</packaging>

  <name>My Equivalents Web App and Web Services</name>

	<properties><axis2-version>1.6.2</axis2-version></properties>

	<dependencies>

		<!-- Use Logback as concrete test logger -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>

		<!-- Intercepts log4j and sends it to SL4J -->		
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
		</dependency>
		
		<!-- The next two do the same for commons -->
		<dependency>
		  <groupId>commons-logging</groupId>
		  <artifactId>commons-logging</artifactId>
		  <version>1.1.1</version>
		  <scope>provided</scope>
		</dependency>
		<dependency>
		  <groupId>org.slf4j</groupId>
		  <artifactId>jcl-over-slf4j</artifactId>
		</dependency>		


		<!-- Apache Axis -->
		<dependency>
		  <groupId>org.apache.axis2</groupId>
		  <artifactId>axis2</artifactId>
		  <version>${axis2-version}</version>
		</dependency>
		 		 
		<dependency>
		  <groupId>org.apache.axis2</groupId>
		  <artifactId>axis2-transport-http</artifactId>
		  <version>${axis2-version}</version>
		</dependency>
		 
		<dependency>
		  <groupId>org.apache.axis2</groupId>
		  <artifactId>axis2-transport-local</artifactId>
		  <version>${axis2-version}</version>
		</dependency>
            

		<!-- Project Modules -->

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>myequivalents-core</artifactId>
			<version>${project.version}</version>
		</dependency>
		

		<!-- _____________ TEST _____________ -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
		</dependency>
						
	</dependencies>  


	<build>
	
		<finalName>myequivalents-web_${project.version}</finalName>

		<plugins>

	    <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.2</version>
        <configuration>
          <!-- These are already in Tomcat and clash with them -->
          <packagingExcludes>WEB-INF/lib/jsp-api-*.jar,WEB-INF/lib/log4j-*.jar,WEB-INF/lib/servlet-api-*.jar,WEB-INF/lib/xmlParserAPIs-*.jar</packagingExcludes>
	      </configuration>
	    </plugin>      

			<!--
				This allows deployment via mvn tomcat:deploy and tomcat:redeploy
				If you prefer to create the war and copy it manually under tomcat/webapps, issue this:
					mvn -Dmaven.test.skip=true package 
					
				TODO: imported from an old project, not re-tested.
			-->
			<plugin>
		    <groupId>org.codehaus.mojo</groupId>
		    <artifactId>tomcat-maven-plugin</artifactId>
				<version>1.1</version>		    
		    <configuration>
		    	<!-- Will deploy via http/PUT, localhost:8080, user: admin, no password, if you need different settings, 
		    	     you have to define them in your .m2/settings.xml, see the documentation here:
		    	     http://mojo.codehaus.org/tomcat-maven-plugin/usage.html  
		    	-->
	        <!--  server>brandizi_tomcat</server -->
		    </configuration>
			</plugin>
		
			<!-- This allows to test with mvn jetty:run -->
	    <plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.1.5.v20120716</version>
	      <configuration>

					<systemProperties>
						<!-- Triggers test data creation in uk.ac.ebi.fg.myequivalents.webservices.test.WebTestDataInitializer -->
          	<systemProperty>
            	<name>uk.ac.ebi.fg.myequivalents.test_flag</name>
              <value>true</value>
            </systemProperty>
         	</systemProperties>	      	
	      	
	        <scanIntervalSeconds>10</scanIntervalSeconds>
	        <useTestScope>true</useTestScope>
	        <connectors>
	          <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
	            <port>8080</port>
	            <maxIdleTime>60000</maxIdleTime>
	          </connector>
	        </connectors>
	      </configuration>
	    </plugin>
	    		
		</plugins>		
		
	</build>
	  
</project>