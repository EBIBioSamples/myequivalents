#
# This is not included in the final .war, just copied in target/. The idea is that you copy this file in a suitable 
# location on your application server. You should set up such location in context.xml (in the copy that you have copied
# on the application server. If you use Tomcat, all the necessary deployment will be done by the deploy2tomcat.sh
# script. See the documentation for details.  
#

# Needed by Hibernate3 Maven Plugin defined in pom.xml
hibernate.connection.username=${jdbc.username}
hibernate.connection.password=${jdbc.password}
hibernate.connection.url=${jdbc.url}
hibernate.connection.driver_class=${jdbc.driverClassName}
# hibernate.default_schema=${hibernate.default_schema}
hibernate.dialect=${hibernate.dialect}
hibernate.hbm2ddl.auto=${hibernate.hbm2ddl.auto}
hibernate.connection.autocommit=false
hibernate.jdbc.batch_size=50
hibernate.show_sql=false
#hibernate.connection.pool_size=1

hibernate.jdbc.use_scrollable_resultset=true

hibernate.jdbc.wrap_result_sets = true
#hibernate.statement_cache.size=0

#hibernate.dbcp.ps.maxIdle = 0
#hibernate.cache.use_second_level_cache=false

# You really need these for the web service, otherwise you risk bad performance and exceptions
hibernate.c3p0.max_size=250 # Check the limit you have on your DB
hibernate.c3p0.checkoutTimeout=300000 # If the pool is full, a new client is made to wait this time (default = 5min, 0 = infinite)
hibernate.c3p0.checkout_timeout=300000 # TODO: not clear which syntax should be used

