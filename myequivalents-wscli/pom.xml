<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>uk.ac.ebi.fg</groupId>
    <artifactId>myequivalents</artifactId>
    <version>0.2-SNAPSHOT</version>
  </parent>
  <artifactId>myequivalents-wscli</artifactId>
  <name>My Equivalents Web Service Client</name>
  <description>A Java client to access the MyEquivalents web services.</description>
  
	<dependencies>

		<!-- We need this located here at the top, cause there are conflicts with JPA 1 during the integration test -->
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<version>1.0.1.Final</version>
			<scope>runtime</scope>
		</dependency>
	

		<!-- Use Logback as concrete test logger -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>

		<!-- Intercepts log4j and sends it to SL4J -->		
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
		</dependency>
		
		<!-- The next two do the same for commons -->
		<dependency>
		  <groupId>commons-logging</groupId>
		  <artifactId>commons-logging</artifactId>
		  <version>1.1.1</version>
		  <scope>provided</scope>
		</dependency>
		<dependency>
		  <groupId>org.slf4j</groupId>
		  <artifactId>jcl-over-slf4j</artifactId>
		</dependency>

		<dependency>
			<groupId>uk.ac.ebi</groupId>
			<artifactId>jutils</artifactId>
		</dependency>
	
	
		<!-- Dependencies from other modules in the same project -->

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>myequivalents-core</artifactId>
			<version>${project.version}</version>
		</dependency>
	
		
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-client</artifactId>
		</dependency>
		
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>
		

		<!-- Used by Jetty during tests -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>myequivalents-web</artifactId>
			<version>${project.version}</version>
			<type>war</type>
			<scope>runtime</scope>
		</dependency>	      
			
			
		<!-- XML output is obtained by low-level REST requests, bypassing Jersey, it's simpler/faster  -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.2.5</version>
		</dependency>            
			
		<!-- Brilliant! package to verify expected exceptions (http://code.google.com/p/catch-exception/) -->
		<dependency>
	    <groupId>com.googlecode.catch-exception</groupId>
	    <artifactId>catch-exception</artifactId>
	    <scope>test</scope>
		</dependency>
			
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<scope>test</scope>
		</dependency>
			
  </dependencies>
  
  
  <build>
  
		<finalName>myequivalents-wscli_${project.version}</finalName>
  
		<plugins>
		
			<!-- This is activated before tests and uses the overlay import mechanism -->
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				
				<configuration>
				
					<systemProperties>
						<!-- Triggers test data creation in uk.ac.ebi.fg.myequivalents.webservices.server.test.WebTestDataInitializer -->
				  	<systemProperty>
				    	<name>uk.ac.ebi.fg.myequivalents.test_flag</name>
				      <value>true</value>
				    </systemProperty>
				 	</systemProperties>	      	
				
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<useTestScope>true</useTestScope>

				  <httpConnector>
				  	<!-- 8080 is often busy on EBI hosts -->
				    <port>10973</port>
				  </httpConnector>
					
					<stopPort>10974</stopPort>
        	<stopKey>KILL</stopKey>
        
				</configuration>
				
				<executions>
					<!-- 
						starts jetty before tests and stops it afterwards. Note that no stop goal is needed, it magically stops
						after tests 
					-->
					<execution>
						<id>start-jetty</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>run</goal>
				  	</goals>
						<configuration>
						  <scanIntervalSeconds>0</scanIntervalSeconds>
						  <daemon>true</daemon>
						</configuration>
					</execution>
					<execution>
				    <id>stop-jetty</id>
				    <phase>post-integration-test</phase>
				    <goals>
			        <goal>stop</goal>
				    </goals>
					</execution>					
				</executions>
			</plugin>
			
	    <plugin>
	      <artifactId>maven-failsafe-plugin</artifactId>
	      <version>2.17</version>
				<executions>
          <execution>
          	<phase>integration-test</phase>
            <goals>
            	<goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>	      
	    </plugin>


			<!-- This creates a zip with all the dependencies that a non-maven app might need -->
	    <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>deps</id>
            <configuration>
              <finalName>myequivalents_deps</finalName>
              <appendAssemblyId>false</appendAssemblyId>
              <attach>false</attach>
              <descriptors>
              	<descriptor>src/main/assembly/deps.xml</descriptor>
              </descriptors>
            </configuration>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
          <execution>
              <id>pkg</id>
              <configuration>
                  <finalName>myequivalents-wscli_${project.version}</finalName>
                  <appendAssemblyId>false</appendAssemblyId>
                  <attach>false</attach>
                  <descriptors>
                      <descriptor>src/main/assembly/pkg.xml</descriptor>
                  </descriptors>
              </configuration>
              <phase>package</phase>
              <goals>
              	<goal>single</goal>
              </goals>
          </execution>
        </executions>
	    </plugin>
	    			
		</plugins>  
		

  </build>
  
</project>
